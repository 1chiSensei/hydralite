// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

// model OauthConnection {
//   id          String    @id @default(uuid())
// }

// model OauthConnection {
//   id                 String  @id @default(uuid())
//   email              String
//   username           String
//   oauthServiceUserId String
//   isPrimary          Boolean
//   owner              User
// }

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  username  String   @unique
  email     String   @unique
  joinDate  DateTime @default(now())
  hydra     Int

  // Profile
  profile   UserProfile @relation("UserProfileRelation", fields: [profileId], references: [id])
  profileId String

  // Projects
  ownedProjects Project[] @relation("UserOwnedProjectsRelation")

  // Appreciated Projects
  likedProjects    Project[] @relation("UserLikedProjectsRelation")
  followedProjects Project[] @relation("UserFollowedProjectsRelation")
}

model UserProfile {
  id        String        @id @default(uuid())
  owner     User?         @relation("UserProfileRelation")
  avatarURL String
  bio       String
  following UserProfile[] @relation("ProfileFollowRelation", references: [id])
  followers UserProfile[] @relation("ProfileFollowRelation", references: [id])
  // connections OauthConnection[]
}

model Project {
  id          String @id @default(uuid())
  title       String
  description String
  logoUrl     String
  bannerUrl   String

  // Owner
  Owner   User   @relation("UserOwnedProjectsRelation", fields: [ownerId], references: [id])
  ownerId String

  // Appreciaters
  likers    User[] @relation("UserLikedProjectsRelation", references: [id])
  followers User[] @relation("UserFollowedProjectsRelation", references: [id])
}
